{
  "version": 3,
  "sources": ["../../src/scripts/utils/svelte-tilt.ts", "../../src/svelte/views/about/about-card.svelte", "../../src/routes/about/index.ts"],
  "sourcesContent": ["// https://github.com/micku7zu/vanilla-tilt.js/tree/master\r\n\r\ninterface TiltChangeEvent {\r\n    tiltX: string\r\n    tiltY: string\r\n    percentageX: number\r\n    percentageY: number\r\n    angle: number\r\n}\r\n\r\ninterface IPosition {\r\n    clientX: number\r\n    clientY: number\r\n}\r\n\r\n\r\nclass ElementData {\r\n    public width: number | null\r\n    public height: number | null\r\n    public clientWidth: number | null\r\n    public clientHeight: number | null\r\n    public left: number | null\r\n    public top: number | null\r\n\r\n    constructor() {\r\n        this.width = null\r\n        this.height = null\r\n        this.clientWidth = null\r\n        this.clientHeight = null\r\n        this.left = null\r\n        this.top = null\r\n    }\r\n\r\n\r\n    public getWidth(): number {\r\n        return this.width !== null ? this.width : 0\r\n    }\r\n\r\n    public getHeight(): number {\r\n        return this.height != null ? this.height : 0\r\n    }\r\n\r\n    public getClientWidth(): number {\r\n        return this.clientWidth !== null ? this.clientWidth : 0\r\n    }\r\n\r\n    public getClientHeight(): number {\r\n        return this.clientHeight !== null ? this.clientHeight : 0\r\n    }\r\n\r\n    public getLeft(): number {\r\n        return this.left !== null ? this.left : 0\r\n    }\r\n\r\n    public getTop(): number {\r\n        return this.top !== null ? this.top : 0\r\n    }\r\n\r\n}\r\n\r\nclass GyroscopeData {\r\n    public gammazero: number | null\r\n    public betazero: number | null\r\n    public lastGammazero: number | null\r\n    public lastBetazero: number | null\r\n\r\n    constructor() {\r\n        this.gammazero = null\r\n        this.betazero = null\r\n        this.lastGammazero = null\r\n        this.lastBetazero = null\r\n    }\r\n\r\n\r\n    public getGammazero(): number {\r\n        return this.gammazero !== null ? this.gammazero : 0\r\n    }\r\n\r\n    public getBetazero(): number {\r\n        return this.betazero !== null ? this.betazero : 0\r\n    }\r\n\r\n    public getLastGammazero(): number {\r\n        return this.lastGammazero !== null ? this.lastGammazero : 0\r\n    }\r\n\r\n    public getLastBetazero(): number {\r\n        return this.lastBetazero != null ? this.lastBetazero : 0\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Settings interface\r\n */\r\nexport interface ITiltSettings {\r\n    reverse: boolean\r\n    max: number\r\n    startX: number\r\n    startY: number\r\n    perspective: number\r\n    easing: string\r\n    scale: number\r\n    speed: number\r\n    transition: boolean\r\n    axis: string | null\r\n    glare: boolean\r\n    maxGlare: number\r\n    glarePrerender: boolean\r\n    fullPageListening: boolean\r\n    mouseEventElement: string | Element | null\r\n    reset: boolean\r\n    resetToStart: boolean\r\n    gyroscope: boolean\r\n    gyroscopeMinAngleX: number\r\n    gyroscopeMaxAngleX: number\r\n    gyroscopeMinAngleY: number\r\n    gyroscopeMaxAngleY: number\r\n    gyroscopeSamples: number\r\n\r\n    getReverseInt(): number\r\n\r\n}\r\n\r\n/**\r\n * @see https://github.com/micku7zu/vanilla-tilt.js/blob/48f4ee931d4d91dcdd2f91803db67a9f3a16587e/src/vanilla-tilt.js#L418\r\n */\r\nexport class TiltSettings implements ITiltSettings {\r\n    reverse: boolean = false\r\n    max: number = 15\r\n    startX: number = 0\r\n    startY: number = 0\r\n    perspective: number = 1000\r\n    easing: string = 'cubic-bezier(.03,.98,.52,.99)'\r\n    scale: number = 1\r\n    speed: number = 300\r\n    transition: boolean = true\r\n    axis: string | null = null\r\n\r\n    glare: boolean = false\r\n    maxGlare: number = 1\r\n    glarePrerender: boolean = false\r\n\r\n    fullPageListening: boolean = false\r\n    mouseEventElement: string | Element | null = null\r\n\r\n    reset: boolean = true\r\n    resetToStart: boolean = true\r\n\r\n    gyroscope: boolean = true\r\n    gyroscopeMinAngleX: number = -45\r\n    gyroscopeMaxAngleX: number = 45\r\n    gyroscopeMinAngleY: number = -45\r\n    gyroscopeMaxAngleY: number = 45\r\n    gyroscopeSamples: number = 10\r\n\r\n    public getReverseInt(): number {\r\n        return this.reverse ? -1 : 1\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @see https://github.com/micku7zu/vanilla-tilt.js/blob/48f4ee931d4d91dcdd2f91803db67a9f3a16587e/src/vanilla-tilt.js#L1\r\n */\r\nexport class SvelteTilt {\r\n    private elementData: ElementData\r\n    private gyroscopeData: GyroscopeData\r\n\r\n    private transitionTimeout: number|undefined\r\n    private updateCall: number | null\r\n    private event: IPosition | null\r\n\r\n    private element: HTMLElement\r\n    private settings: ITiltSettings\r\n\r\n    private elementListener: Node | HTMLElement\r\n    private glareElement: HTMLElement | null = null\r\n    private glareElementWrapper: HTMLElement | null = null\r\n\r\n    private updateBind: () => void\r\n    private resetBind: () => void\r\n\r\n    private onMouseEnterBind: (() => void) | undefined\r\n    private onMouseMoveBind: ((event: Event | MouseEvent) => void) | undefined\r\n    private onMouseLeaveBind: (() => void) | undefined\r\n    private onWindowResizeBind: (() => void) | undefined\r\n    private onDeviceOrientationBind: ((event: DeviceOrientationEvent) => void) | undefined\r\n\r\n\r\n    constructor(element: HTMLElement, settings: ITiltSettings = new TiltSettings()) {\r\n        this.elementData = new ElementData()\r\n        this.gyroscopeData = new GyroscopeData()\r\n\r\n        this.updateCall = null\r\n        this.event = null\r\n\r\n        this.updateBind = this.update.bind(this)\r\n        this.resetBind = this.reset.bind(this)\r\n\r\n        this.element = element\r\n        this.settings = settings\r\n\r\n        this.elementListener = this.getElementListener()\r\n\r\n        if (settings.glare)\r\n            this.prepareGlare()\r\n\r\n        if (settings.fullPageListening)\r\n            this.updateClientSize()\r\n\r\n        this.addEventListeners()\r\n        this.reset()\r\n\r\n        if (settings.resetToStart === false) {\r\n            this.settings.startX = 0\r\n            this.settings.startY = 0\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Method returns element what will be listen mouse events\r\n     * \r\n     * @returns \r\n     * @see https://github.com/micku7zu/vanilla-tilt.js/blob/48f4ee931d4d91dcdd2f91803db67a9f3a16587e/src/vanilla-tilt.js#L72\r\n     */\r\n    private getElementListener(): Node {\r\n        if (this.settings.fullPageListening)\r\n            return window.document\r\n\r\n        if (typeof (this.settings.mouseEventElement) === 'string') {\r\n            const queryElement = document.querySelector(this.settings.mouseEventElement)\r\n\r\n            if (queryElement)\r\n                return queryElement\r\n        }\r\n\r\n        if (this.settings.mouseEventElement instanceof Element)\r\n            return this.settings.mouseEventElement\r\n\r\n        return this.element;\r\n    }\r\n\r\n    /**\r\n     * Method set listen methods for this.elementListener\r\n     */\r\n    public addEventListeners(): void {\r\n        this.onMouseEnterBind = this.onMouseEnter.bind(this)\r\n        this.onMouseMoveBind = this.onMouseMove.bind(this)\r\n        this.onMouseLeaveBind = this.onMouseLeave.bind(this)\r\n        this.onWindowResizeBind = this.onWindowResize.bind(this)\r\n        this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this)\r\n\r\n        this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind)\r\n        this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind)\r\n        this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind)\r\n\r\n        if (this.settings.glare || this.settings.fullPageListening)\r\n            window.addEventListener(\"resize\", this.onWindowResizeBind)\r\n\r\n        if (this.settings.gyroscope)\r\n            window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind)\r\n    }\r\n\r\n    /**\r\n     * Method remove event listeners from current this.elementListener\r\n     */\r\n    public removeEventListeners(): void {\r\n        if (this.onMouseEnterBind)\r\n            this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind)\r\n        if (this.onMouseLeaveBind)\r\n            this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind)\r\n        if (this.onMouseMoveBind)\r\n            this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind)\r\n\r\n\r\n        if (this.settings.gyroscope && this.onDeviceOrientationBind)\r\n            window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind)\r\n\r\n        if ((this.settings.glare || this.settings.fullPageListening) && this.onWindowResizeBind)\r\n            window.removeEventListener(\"resize\", this.onWindowResizeBind)\r\n    }\r\n\r\n\r\n    public reset() {\r\n        this.onMouseEnter()\r\n\r\n        const clientWidth = this.elementData.getClientWidth()\r\n        const clientHeight = this.elementData.getClientHeight()\r\n        const left = this.elementData.getLeft()\r\n        const top = this.elementData.getTop()\r\n        const width = this.elementData.getWidth()\r\n        const height = this.elementData.getHeight()\r\n        const max = this.settings.max\r\n        const startX = this.settings.startX\r\n        const startY = this.settings.startY\r\n\r\n        if (this.settings.fullPageListening) {\r\n            this.event = {\r\n                clientX: (startX + max) / (2 * max) * clientWidth,\r\n                clientY: (startY + max) / (2 * max) * clientHeight\r\n            }\r\n        } else {\r\n            this.event = {\r\n                clientX: left + ((startX + max) / (2 * max) * width),\r\n                clientY: top + ((startY + max) / (2 * max) * height)\r\n            }\r\n        }\r\n\r\n        const backupScale = this.settings.scale\r\n        this.settings.scale = 1\r\n        this.update()\r\n        this.settings.scale = backupScale\r\n        this.resetGlare()\r\n    }\r\n\r\n    public resetGlare() {\r\n        if (this.settings.glare && this.glareElement) {\r\n            this.glareElement.style.transform = 'rotate(180deg) translate(-50%, -50%)'\r\n            this.glareElement.style.opacity = '0'\r\n        }\r\n    }\r\n\r\n    public getValues(): TiltChangeEvent {\r\n        const eClientX = this.event ? this.event.clientX : 0\r\n        const eClientY = this.event ? this.event.clientY : 0\r\n        const clientWidth = this.elementData.getClientWidth()\r\n        const clientHeight = this.elementData.getClientHeight()\r\n        const left = this.elementData.getLeft()\r\n        const top = this.elementData.getTop()\r\n        const width = this.elementData.getWidth()\r\n        const height = this.elementData.getHeight()\r\n        const max = this.settings.max\r\n        const reverse = this.settings.getReverseInt()\r\n        let x: number\r\n        let y: number\r\n\r\n        if (this.settings.fullPageListening) {\r\n            x = eClientX / clientWidth;\r\n            y = eClientY / clientHeight;\r\n        } else {\r\n            x = (eClientX - left) / width\r\n            y = (eClientY - top) / height\r\n        }\r\n\r\n        x = Math.min(Math.max(x, 0), 1)\r\n        y = Math.min(Math.max(y, 0), 1)\r\n\r\n        const tiltX = (reverse * (max - x * max * 2)).toFixed(2)\r\n        const tiltY = (reverse * (y * max * 2 - max)).toFixed(2)\r\n        const angle = Math.atan2(eClientX - (left + width / 2), -(eClientY - (top + height / 2))) * (180 / Math.PI)\r\n\r\n        return {\r\n            tiltX: tiltX,\r\n            tiltY: tiltY,\r\n            percentageX: x * 100,\r\n            percentageY: y * 100,\r\n            angle: angle\r\n        }\r\n    }\r\n\r\n    private updateElementPosition(): void {\r\n        const rect = this.element.getBoundingClientRect()\r\n\r\n        this.elementData.width = this.element.offsetWidth\r\n        this.elementData.height = this.element.offsetHeight\r\n        this.elementData.left = rect.left\r\n        this.elementData.top = rect.top\r\n    }\r\n\r\n\r\n    private update() {\r\n        let values = this.getValues()\r\n\r\n        this.element.style.transform = `perspective(${this.settings.perspective}px) ` +\r\n            `rotateX(${this.settings.axis === \"x\" ? 0 : values.tiltY}deg) ` +\r\n            `rotateY(${this.settings.axis === \"y\" ? 0 : values.tiltX}deg) ` +\r\n            `scale3d(${this.settings.scale}, ${this.settings.scale}, ${this.settings.scale})`\r\n\r\n        if (this.settings.glare && this.glareElement) {\r\n            this.glareElement.style.transform = `rotate(${values.angle}deg) translate(-50%, -50%)`\r\n            this.glareElement.style.opacity = (values.percentageY * this.settings.maxGlare / 100).toString()\r\n        }\r\n\r\n        this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\r\n            \"detail\": values\r\n        }))\r\n\r\n        this.updateCall = null\r\n    }\r\n\r\n    /**\r\n     * Appends the glare element (if glarePrerender equals false)\r\n     * and sets the default style\r\n     */\r\n    private prepareGlare() {\r\n        // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\r\n        if (!this.settings.glarePrerender) {\r\n            // Create glare element\r\n            const jsTiltGlare = document.createElement(\"div\")\r\n            jsTiltGlare.classList.add(\"js-tilt-glare\")\r\n\r\n            const jsTiltGlareInner = document.createElement(\"div\")\r\n            jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\")\r\n\r\n            jsTiltGlare.appendChild(jsTiltGlareInner)\r\n            this.element.appendChild(jsTiltGlare)\r\n        }\r\n\r\n        this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\")\r\n        this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\")\r\n\r\n        if (this.settings.glarePrerender)\r\n            return\r\n\r\n        if (this.glareElementWrapper) {\r\n            const style = this.glareElementWrapper.style\r\n            style.position = 'absolute'\r\n            style.top = '0'\r\n            style.left = '0'\r\n            style.width = '100%'\r\n            style.height = '100%'\r\n            style.overflow = 'hidden'\r\n            style.pointerEvents = 'none'\r\n            style.borderRadius = 'inherit'\r\n        }\r\n\r\n        if (this.glareElement) {\r\n            const style = this.glareElement.style\r\n            style.position = 'absolute'\r\n            style.top = '50%'\r\n            style.left = '50%'\r\n            style.pointerEvents = 'none'\r\n            style.backgroundImage = 'linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)'\r\n            style.transform = 'rotate(180deg) translate(-50%, -50%)'\r\n            style.transformOrigin = '0% 0%'\r\n            style.opacity = '0'\r\n        }\r\n\r\n        this.updateGlareSize()\r\n    }\r\n\r\n    private updateGlareSize() {\r\n        if (!this.settings.glare)\r\n            return\r\n\r\n        const offsetWidth = this.element.offsetWidth\r\n        const offsetHeight = this.element.offsetHeight\r\n        const glareSize = (offsetWidth > offsetHeight ? offsetWidth : offsetHeight) * 2\r\n\r\n        if (this.glareElement) {\r\n            const style = this.glareElement.style\r\n            style.width = glareSize + 'px'\r\n            style.height = glareSize + 'px'\r\n        }\r\n    }\r\n\r\n    private updateClientSize() {\r\n        this.elementData.clientWidth = window.innerWidth\r\n            || document.documentElement.clientWidth\r\n            || document.body.clientWidth\r\n\r\n        this.elementData.clientHeight = window.innerHeight\r\n            || document.documentElement.clientHeight\r\n            || document.body.clientHeight\r\n    }\r\n\r\n\r\n    setTransition(): void {\r\n        clearTimeout(this.transitionTimeout)\r\n\r\n        const speed = this.settings.speed\r\n        const easing = this.settings.easing\r\n\r\n        this.element.style.transition = speed + 'ms ' + easing\r\n        if (this.settings.glare && this.glareElement)\r\n            this.glareElement.style.transition = `opacity ${speed}ms ${easing}`\r\n\r\n\r\n        this.transitionTimeout = setTimeout(() => {\r\n            this.element.style.transition = ''\r\n\r\n            if (this.settings.glare && this.glareElement)\r\n                this.glareElement.style.transition = ''\r\n        }, speed)\r\n    }\r\n\r\n\r\n\r\n    // Internal Events --------------------------\r\n\r\n\r\n\r\n    private onDeviceOrientation(event: DeviceOrientationEvent): void {\r\n        if (event.gamma === null || event.beta === null)\r\n            return\r\n\r\n        this.updateElementPosition()\r\n\r\n        if (this.settings.gyroscopeSamples > 0) {\r\n            this.gyroscopeData.lastGammazero = this.gyroscopeData.gammazero\r\n            this.gyroscopeData.lastBetazero = this.gyroscopeData.betazero\r\n\r\n            if (this.gyroscopeData.gammazero === null) {\r\n                this.gyroscopeData.gammazero = event.gamma\r\n                this.gyroscopeData.betazero = event.beta\r\n            } else {\r\n                this.gyroscopeData.gammazero = (event.gamma + this.gyroscopeData.getLastGammazero()) / 2\r\n                this.gyroscopeData.betazero = (event.beta + this.gyroscopeData.getLastBetazero()) / 2\r\n            }\r\n\r\n            this.settings.gyroscopeSamples -= 1\r\n        }\r\n\r\n        const totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX\r\n        const totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY\r\n\r\n        const degreesPerPixelX = totalAngleX / this.elementData.getWidth()\r\n        const degreesPerPixelY = totalAngleY / this.elementData.getHeight()\r\n\r\n        const angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gyroscopeData.getGammazero())\r\n        const angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.gyroscopeData.getBetazero())\r\n\r\n        const posX = angleX / degreesPerPixelX\r\n        const posY = angleY / degreesPerPixelY\r\n\r\n        if (this.updateCall !== null)\r\n            cancelAnimationFrame(this.updateCall)\r\n\r\n        this.event = {\r\n            clientX: posX + this.elementData.getLeft(),\r\n            clientY: posY + this.elementData.getTop(),\r\n        }\r\n\r\n        this.updateCall = requestAnimationFrame(this.updateBind)\r\n    }\r\n\r\n    private onMouseEnter(): void {\r\n        this.updateElementPosition()\r\n        this.element.style.willChange = 'transform'\r\n        this.setTransition()\r\n    }\r\n\r\n    private onMouseMove(event: Event | MouseEvent): void {\r\n        if (this.updateCall !== null)\r\n            cancelAnimationFrame(this.updateCall)\r\n\r\n        if (event instanceof MouseEvent)\r\n            this.event = event\r\n\r\n        this.updateCall = requestAnimationFrame(this.updateBind)\r\n    }\r\n\r\n    private onMouseLeave(): void {\r\n        this.setTransition()\r\n\r\n        if (this.settings.reset)\r\n            requestAnimationFrame(this.resetBind)\r\n    }\r\n\r\n    private onWindowResize(): void {\r\n        this.updateGlareSize()\r\n        this.updateClientSize()\r\n    }\r\n\r\n}", "<script lang=\"ts\">\r\n    import { onMount } from \"svelte\";\r\n    import {\r\n        SvelteTilt,\r\n        TiltSettings,\r\n    } from \"../../../scripts/utils/svelte-tilt\";\r\n    import OutlinedCard from \"../material/outlined-card.svelte\";\r\n\r\n    onMount(() => {\r\n        const settings = new TiltSettings();\r\n        settings.glare = true;\r\n        const tilt = new SvelteTilt(el_profile_image, settings);\r\n    });\r\n\r\n    export let style: string = \"\";\r\n    let el_profile_image: HTMLImageElement;\r\n</script>\r\n\r\n<div class=\"container\" {style}>\r\n    <div class=\"background\" />\r\n    <img\r\n        bind:this={el_profile_image}\r\n        class=\"image\"\r\n        src=\"https://github.com/DarthIF.png\"\r\n        alt=\"DarthIF's avatar\"\r\n    />\r\n    <div class=\"title\">\r\n        <a href=\"https://github.com/DarthIF\">DarthIF</a>\r\n        <i>Developer for hobby</i>\r\n    </div>\r\n    <div></div>\r\n</div>\r\n\r\n<style>\r\n    @import \"../../css/a.css\";\r\n\r\n    .container {\r\n        width: 320px;\r\n        margin: auto;\r\n        position: relative;\r\n\r\n        border-color: var(--md-sys-color-outline);\r\n        border-style: solid;\r\n        border-width: 1px;\r\n        border-radius: 12px;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n\r\n        background-color: var(--md-sys-color-surface);\r\n        color: var(--md-sys-color-on-surface);\r\n\r\n        user-select: none;\r\n\r\n        overflow: hidden;\r\n    }\r\n    .container > .image {\r\n        margin-top: 24px;\r\n    }\r\n\r\n    .background {\r\n        width: 100%;\r\n        height: 128px;\r\n\r\n        position: absolute;\r\n\r\n        background-image: url(https://github.com/DarthIF.png);\r\n        background-size: cover;\r\n        background-position: center;\r\n\r\n        user-select: none;\r\n        pointer-events: none;\r\n\r\n        filter: blur(30px);\r\n        transform: scale(1.2);\r\n        transition: all 0.5s;\r\n        -webkit-filter: blur(30px);\r\n        -webkit-transform: scale(1.2);\r\n        -webkit-transition: all 0.5s;\r\n    }\r\n\r\n    .image {\r\n        width: 128px;\r\n        height: 128px;\r\n    }\r\n\r\n    .title {\r\n        margin-top: 12px;\r\n        margin-bottom: 24px;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n\r\n        font-size: medium;\r\n    }\r\n    .title i {\r\n        font-size: small;\r\n    }\r\n</style>\r\n", "import Page from '../../svelte/pages/about-page.svelte'\r\n\r\nconsole.log('Iniciando...')\r\n\r\nconst app = new Page({ target: document.body })"],
  "mappings": "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",
  "names": ["ElementData", "GyroscopeData", "TiltSettings", "SvelteTilt", "element", "settings", "queryElement", "clientWidth", "clientHeight", "left", "top", "width", "height", "max", "startX", "startY", "backupScale", "eClientX", "eClientY", "reverse", "x", "y", "tiltX", "tiltY", "angle", "rect", "values", "jsTiltGlare", "jsTiltGlareInner", "style", "offsetWidth", "offsetHeight", "glareSize", "speed", "easing", "event", "totalAngleX", "totalAngleY", "degreesPerPixelX", "degreesPerPixelY", "angleX", "angleY", "posX", "posY", "insert", "target", "div3", "anchor", "append", "div0", "img", "div1", "div2", "onMount", "settings", "TiltSettings", "tilt", "SvelteTilt", "el_profile_image", "style", "$$props", "$$value", "app", "about_page_default"]
}
