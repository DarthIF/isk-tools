{
  "version": 3,
  "sources": ["../../src/scripts/isk/rarity.ts", "../../src/scripts/isk/item.ts", "../../src/svelte/views/isk-tools/slot-view.svelte", "../../src/svelte/views/isk-tools/crystal-editable-slot.svelte", "../../src/scripts/isk/crystal.ts", "../../src/scripts/isk/lang.ts", "../../src/svelte/pages/calculator-page.svelte", "../../src/routes/calculator/index.ts"],
  "sourcesContent": ["export enum Rarity {\r\n    N, R, SR, SSR, UR\r\n}\r\n\r\nexport function getRarityColor(rarity: Rarity): RarityColor {\r\n    // https://materialui.co/colors\r\n\r\n    switch (rarity) {\r\n        case Rarity.SR:\r\n            return new RarityColor('rgba(171, 71, 188, 1)', 'rgba(74, 20, 140, 1)') // Purple 400, Purple 900\r\n        case Rarity.SSR:\r\n            return new RarityColor('rgba(255, 238, 88, 1)', 'rgba(249, 168, 37, 1)') // Yellow 400, Yellow 800\r\n        case Rarity.UR:\r\n            return new RarityColor('rgba(255, 167, 38, 1)', 'rgba(230, 81, 0, 1)') // Orange 400, Orange 900\r\n        default:\r\n            return new RarityColor('rgba(255, 255, 255, 1)', 'rgba(0, 0, 0, 1)') // White, Black\r\n    }\r\n}\r\n\r\nexport class RarityColor {\r\n    public light: string\r\n    public dark: string\r\n\r\n    constructor(light: string, dark: string) {\r\n        this.light = light\r\n        this.dark = dark\r\n    }\r\n\r\n}", "import { Rarity, RarityColor, getRarityColor } from './rarity'\r\n\r\nexport class Item {\r\n    private name: string\r\n    private rarity: Rarity\r\n    private image: string\r\n\r\n\r\n    constructor(name: string, rarity: Rarity, image: string, color: string) {\r\n        this.name = name\r\n        this.rarity = rarity\r\n        this.image = image\r\n    }\r\n\r\n    public getName(): string {\r\n        return this.name\r\n    }\r\n\r\n    public getRarity(): Rarity {\r\n        return this.rarity\r\n    }\r\n\r\n    public getImage(): string {\r\n        return this.image\r\n    }\r\n\r\n\r\n\r\n    public getRarityColor(): RarityColor {\r\n        return getRarityColor(this.rarity)\r\n    }\r\n\r\n    public isShiny(): boolean {\r\n        return this.rarity === Rarity.SSR || this.rarity === Rarity.UR\r\n    }\r\n\r\n\r\n}", "<script lang=\"ts\">\r\n    import { onMount } from \"svelte\";\r\n    import { xref } from \"../../../scripts/isk\";\r\n    import { Item } from \"../../../scripts/isk/item\";\r\n\r\n    function update() {\r\n        if (!el_slot) return;\r\n\r\n        if (item === null) {\r\n            el_slot.classList.remove(\"slot-shiny\");\r\n\r\n            el_slot.style.setProperty(\"--color-light\", \"#ffffff\");\r\n            el_slot.style.setProperty(\"--color-dark\", \"#808080\");\r\n\r\n            return;\r\n        }\r\n\r\n        if (item.isShiny()) {\r\n            el_slot.classList.add(\"slot-shiny\");\r\n        } else {\r\n            el_slot.classList.remove(\"slot-shiny\");\r\n        }\r\n\r\n        el_slot.style.setProperty(\"--color-light\", item.getRarityColor().light);\r\n        el_slot.style.setProperty(\"--color-dark\", item.getRarityColor().dark);\r\n    }\r\n\r\n    function getImage(item: Item | null): string {\r\n        if (!item) return \"\";\r\n\r\n        // Retornar o uri da imagem corrigido pelo xref\r\n        return xref(item.getImage());\r\n    }\r\n\r\n    onMount(() => {\r\n        update();\r\n    });\r\n\r\n    $: item, update();\r\n\r\n    export let item: Item | null = null;\r\n    let el_slot: HTMLDivElement;\r\n</script>\r\n\r\n<div bind:this={el_slot} class=\"slot slot-shiny\">\r\n    <div class=\"inner-border\" />\r\n    <img src={getImage(item)} alt=\"Item\" />\r\n</div>\r\n\r\n<style>\r\n    img {\r\n        width: 40px;\r\n        height: 40px;\r\n    }\r\n\r\n    .slot {\r\n        --color-light: #ffffff;\r\n        --color-dark: #808080;\r\n\r\n        width: 56px;\r\n        height: 56px;\r\n        margin: 36px 24px 12px 24px;\r\n        position: relative;\r\n\r\n        border-radius: 10px;\r\n\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        background: radial-gradient(\r\n            circle,\r\n            var(--color-light) 0%,\r\n            var(--color-dark) 35%,\r\n            rgba(0, 0, 0, 1) 100%\r\n        );\r\n    }\r\n    .slot-shiny {\r\n        position: relative;\r\n    }\r\n\r\n    .inner-border {\r\n        z-index: -1;\r\n        width: 56px;\r\n        height: 56px;\r\n        position: absolute;\r\n\r\n        border: 3px #5d4037 ridge;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    /**\r\n     * BORDA ANIMADA\r\n     */\r\n\r\n    @property --angle {\r\n        syntax: \"<angle>\";\r\n        initial-value: 0deg;\r\n        inherits: false;\r\n    }\r\n\r\n    .slot-shiny::after,\r\n    .slot-shiny::before {\r\n        content: \"\";\r\n        position: absolute;\r\n\r\n        z-index: -1;\r\n        height: 100%;\r\n        width: 100%;\r\n        top: 50%;\r\n        left: 50%;\r\n        translate: -50% -50%;\r\n\r\n        padding: 3px;\r\n\r\n        border-radius: 10px;\r\n\r\n        background-image: conic-gradient(\r\n            from var(--angle),\r\n            #ff000000,\r\n            #ffee58,\r\n            #ff000000,\r\n            #ff000000,\r\n            #ffee58,\r\n            #ff000000,\r\n            #ff000000\r\n        );\r\n\r\n        animation: 3s spin linear infinite;\r\n    }\r\n\r\n    .slot-shiny::before {\r\n        filter: blur(1.5rem);\r\n        opacity: 0.5;\r\n    }\r\n\r\n    @keyframes spin {\r\n        from {\r\n            --angle: 0deg;\r\n        }\r\n        to {\r\n            --angle: 360deg;\r\n        }\r\n    }\r\n</style>\r\n", "<script lang=\"ts\">\r\n    import type { Item } from \"../../../scripts/isk/item\";\r\n    import SlotView from \"./slot-view.svelte\";\r\n\r\n    export let crystal: Item | null;\r\n    export let count = 0;\r\n    export let onChanged: ((count: number) => void) | null;\r\n</script>\r\n\r\n<div class=\"layout\">\r\n    <SlotView item={crystal} />\r\n    <input\r\n        type=\"number\"\r\n        min=\"0\"\r\n        bind:value={count}\r\n        on:change={(value) => {\r\n            if (onChanged === null) return;\r\n\r\n            const num = Number.parseInt(value.currentTarget.value || \"0\");\r\n            onChanged(num);\r\n        }}\r\n    />\r\n</div>\r\n\r\n<style>\r\n    .layout {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n\r\n    input {\r\n        width: 56px;\r\n        text-align: center;\r\n    }\r\n</style>\r\n", "import { Rarity } from './rarity'\r\nimport { Item } from './item'\r\n\r\n\r\nexport const REFINED_TO_ORE: number = 20 * 50\r\nexport const CRYSTAL_TO_ORE: number = 20\r\n\r\nconst color_red = 'rgb(233, 30, 99)'\r\nconst color_blue = 'rgb(3, 169, 244)'\r\nconst color_yellow = 'rgb(255, 235, 59)'\r\n\r\nconst image_red = 'static/images/vermelho-removebg-preview.png'\r\nconst image_blue = 'static/images/azul-removebg-preview.png'\r\nconst image_yellow = 'static/images/amarelo-removebg-preview.png'\r\n\r\n\r\nexport const Crystals = {\r\n    CRYSTAL_ORE_RED: new Item('crystal_ore.red', Rarity.SR, image_red, color_red),\r\n    CRYSTAL_ORE_BLUE: new Item('crystal_ore.blue', Rarity.SR, image_blue, color_blue),\r\n    CRYSTAL_ORE_YELLOW: new Item('crystal_ore.yellow', Rarity.SR, image_yellow, color_yellow),\r\n\r\n    CRYSTAL_RED: new Item('crystal.red', Rarity.SSR, image_red, color_red),\r\n    CRYSTAL_BLUE: new Item('crystal.blue', Rarity.SSR, image_blue, color_blue),\r\n    CRYSTAL_YELLOW: new Item('crystal.yellow', Rarity.SSR, image_yellow, color_yellow),\r\n\r\n    REFINED_CRYSTAL_RED: new Item('refined_crystal.red', Rarity.UR, image_red, color_red),\r\n    REFINED_CRYSTAL_BLUE: new Item('refined_crystal.blue', Rarity.UR, image_blue, color_blue),\r\n    REFINED_CRYSTAL_YELLOW: new Item('refined_crystal.yellow', Rarity.UR, image_yellow, color_yellow),\r\n}\r\n", "export enum Lang {\r\n    PT, EN\r\n}\r\n\r\nexport function getTranslation(lang: Lang, key: string): string {\r\n    switch (lang) {\r\n        case Lang.PT:\r\n            return pt[key] || key\r\n        case Lang.EN:\r\n            return en[key] || key\r\n        default:\r\n            return key\r\n    }\r\n}\r\n\r\ntype Translations = {\r\n    [key: string]: string;\r\n};\r\n\r\nconst en: Translations = {\r\n    'app.title': 'Isekai Slow Life - Crystal Collector',\r\n    'app.header': 'Which crystals do you need?',\r\n    'app.days': 'How many days will it take to get, just by buying?',\r\n    'app.information': 'Ores that can be bought per day:',\r\n\r\n    'crystal_ore.red': 'Bravery Crystal Ore',\r\n    'crystal_ore.blue': 'Wisdom Crystal Ore',\r\n    'crystal_ore.yellow': 'Hope Crystal Ore',\r\n\r\n    'crystal.red': 'Bravery Crystal',\r\n    'crystal.blue': 'Wisdom Crystal',\r\n    'crystal.yellow': 'Hope Crystal',\r\n\r\n    'refined_crystal.red': 'Refined Bravery Crystal',\r\n    'refined_crystal.blue': 'Refined Wisdom Crystal',\r\n    'refined_crystal.yellow': 'Refined Hope Crystal',\r\n\r\n    'trading_post': 'Trading Post',\r\n    'challenge_shop': 'Challenge Shop',\r\n    'golemore_mine': 'Golemore Mine',\r\n    'guild': 'Guild',\r\n    'banquet': 'Banquet',\r\n};\r\n\r\nconst pt: Translations = {\r\n    'app.title': 'Isekai Slow Life - Crystal Collector',\r\n    'app.header': 'Quais cristais voc\u00EA precisa?',\r\n    'app.days': 'Quantos dias voc\u00EA vai levar para conseguir, apenas comprando?',\r\n    'app.information': 'Min\u00E9rios que poder\u00E3o ser comprados por dia:',\r\n\r\n    'crystal_ore.red': 'Min\u00E9rio de Cristal de Bravura',\r\n    'crystal_ore.blue': 'Min\u00E9rio de Cristal de Sabedoria',\r\n    'crystal_ore.yellow': 'Min\u00E9rio de Cristal de Esperan\u00E7a',\r\n\r\n    'crystal.red': 'Cristal de Bravura',\r\n    'crystal.blue': 'Cristal de Sabedoria',\r\n    'crystal.yellow': 'Cristal de Esperan\u00E7a',\r\n\r\n    'refined_crystal.red': 'Bravery Cristal',\r\n    'refined_crystal.blue': 'Wisdom Cristal',\r\n    'refined_crystal.yellow': 'Hope Cristal',\r\n\r\n    'trading_post': 'Guilda dos Mercadores',\r\n    'challenge_shop': 'Loja de Desafios',\r\n    'golemore_mine': 'Mina de Golemore',\r\n    'guild': 'Guilda',\r\n    'banquet': 'Banquete',\r\n};", "<script lang=\"ts\">\r\n    import { onMount } from \"svelte\";\r\n    import CommonLayout from \"../layout/common-layout.svelte\";\r\n    import CrystalEditableSlot from \"../views/isk-tools/crystal-editable-slot.svelte\";\r\n    import OutlinedCard from \"../views/material/outlined-card.svelte\";\r\n    import {\r\n        CRYSTAL_TO_ORE,\r\n        Crystals,\r\n        REFINED_TO_ORE,\r\n    } from \"../../scripts/isk/crystal\";\r\n    import { getTranslation, Lang } from \"../../scripts/isk/lang\";\r\n\r\n    type MouseDivEventType = MouseEvent & {\r\n        currentTarget: EventTarget & HTMLDivElement;\r\n    };\r\n\r\n    function round(value: number, step: number) {\r\n        // https://stackoverflow.com/a/34591063/16081650\r\n\r\n        step || (step = 1.0);\r\n\r\n        const inverse = 1.0 / step;\r\n        return Math.round(value * inverse) / inverse;\r\n    }\r\n\r\n    function toggleChildCheckbox(e: MouseDivEventType) {\r\n        e.currentTarget.querySelector(\"input\")?.click();\r\n    }\r\n\r\n    function stopMouseEvents(e: MouseEvent) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    // ------------------------------------------\r\n\r\n    function update() {\r\n        values.expected_ores_per_day = 0;\r\n\r\n        if (values.trading_post) {\r\n            DAILY_LIMIT.trading_post.forEach((pack_limit) => {\r\n                values.expected_ores_per_day += pack_limit;\r\n            });\r\n        }\r\n        if (values.challenge_shop) {\r\n            DAILY_LIMIT.challenge_shop.forEach((pack_limit) => {\r\n                values.expected_ores_per_day += pack_limit;\r\n            });\r\n        }\r\n        if (values.golemore_mine) {\r\n            DAILY_LIMIT.golemore_mine.forEach((pack_limit) => {\r\n                values.expected_ores_per_day += pack_limit;\r\n            });\r\n        }\r\n        if (values.guild) {\r\n            DAILY_LIMIT.guild.forEach((pack_limit) => {\r\n                values.expected_ores_per_day += pack_limit;\r\n            });\r\n        }\r\n        if (values.banquet) {\r\n            DAILY_LIMIT.banquet.forEach((pack_limit) => {\r\n                values.expected_ores_per_day += pack_limit;\r\n            });\r\n        }\r\n\r\n        const total_red_ores = (() => {\r\n            return (\r\n                values.ore.red +\r\n                values.crystal.red * CRYSTAL_TO_ORE +\r\n                values.refined.red * REFINED_TO_ORE\r\n            );\r\n        })();\r\n        const total_blue_ores = (() => {\r\n            return (\r\n                values.ore.blue +\r\n                values.crystal.blue * CRYSTAL_TO_ORE +\r\n                values.refined.blue * REFINED_TO_ORE\r\n            );\r\n        })();\r\n        const total_yellow_ores = (() => {\r\n            return (\r\n                values.ore.yellow +\r\n                values.crystal.yellow * CRYSTAL_TO_ORE +\r\n                values.refined.yellow * REFINED_TO_ORE\r\n            );\r\n        })();\r\n\r\n        const single_max = Math.max(\r\n            total_red_ores,\r\n            total_blue_ores,\r\n            total_yellow_ores,\r\n        );\r\n\r\n        let days = round(single_max / values.expected_ores_per_day, 1);\r\n        if (days === 0 && single_max > 0) {\r\n            days = 1;\r\n        }\r\n\r\n        values.days = days;\r\n\r\n        console.log(\"---------------------------------\");\r\n        console.log(\"expected_per_day=\" + values.expected_ores_per_day);\r\n        console.log(\"total_red_ores=\" + total_red_ores);\r\n        console.log(\"total_blue_ores=\" + total_blue_ores);\r\n        console.log(\"total_yellow_ores=\" + total_yellow_ores);\r\n        console.log(\"single_max=\" + single_max);\r\n        console.log(\"days=\" + days);\r\n    }\r\n\r\n    // ------------------------------------------\r\n\r\n    onMount(() => {\r\n        if (navigator.language.startsWith(\"pt\")) {\r\n            lang = Lang.PT;\r\n        }\r\n\r\n        update();\r\n    });\r\n\r\n    const DAILY_LIMIT = {\r\n        trading_post: [5, 5, 10],\r\n        challenge_shop: [5, 5],\r\n        golemore_mine: [10],\r\n        guild: [3, 3],\r\n        banquet: [40],\r\n    };\r\n\r\n    let values = {\r\n        trading_post: true,\r\n        challenge_shop: true,\r\n        golemore_mine: false,\r\n        guild: false,\r\n        banquet: false,\r\n\r\n        days: 0,\r\n        expected_ores_per_day: 0,\r\n\r\n        ore: {\r\n            red: 0,\r\n            blue: 0,\r\n            yellow: 0,\r\n        },\r\n        crystal: {\r\n            red: 0,\r\n            blue: 0,\r\n            yellow: 0,\r\n        },\r\n        refined: {\r\n            red: 0,\r\n            blue: 0,\r\n            yellow: 0,\r\n        },\r\n    };\r\n    let lang = Lang.EN;\r\n</script>\r\n\r\n<CommonLayout>\r\n    <div class=\"fragment\">\r\n        <h1 style=\"margin: auto;\">{getTranslation(lang, \"app.header\")}</h1>\r\n\r\n        <div class=\"crystal-group\">\r\n            <!-- Ore -->\r\n            <CrystalEditableSlot\r\n                crystal={Crystals.CRYSTAL_ORE_RED}\r\n                onChanged={(value) => {\r\n                    values.ore.red = value;\r\n                    update();\r\n                }}\r\n            />\r\n            <CrystalEditableSlot\r\n                crystal={Crystals.CRYSTAL_ORE_BLUE}\r\n                onChanged={(value) => {\r\n                    values.ore.blue = value;\r\n                    update();\r\n                }}\r\n            />\r\n            <CrystalEditableSlot\r\n                crystal={Crystals.CRYSTAL_ORE_YELLOW}\r\n                onChanged={(value) => {\r\n                    values.ore.yellow = value;\r\n                    update();\r\n                }}\r\n            />\r\n\r\n            <!-- Crystal -->\r\n            <CrystalEditableSlot\r\n                crystal={Crystals.CRYSTAL_RED}\r\n                onChanged={(value) => {\r\n                    values.crystal.red = value;\r\n                    update();\r\n                }}\r\n            />\r\n            <CrystalEditableSlot\r\n                crystal={Crystals.CRYSTAL_BLUE}\r\n                onChanged={(value) => {\r\n                    values.crystal.blue = value;\r\n                    update();\r\n                }}\r\n            />\r\n            <CrystalEditableSlot\r\n                crystal={Crystals.CRYSTAL_YELLOW}\r\n                onChanged={(value) => {\r\n                    values.crystal.yellow = value;\r\n                    update();\r\n                }}\r\n            />\r\n\r\n            <!-- Refined -->\r\n            <CrystalEditableSlot\r\n                crystal={Crystals.REFINED_CRYSTAL_RED}\r\n                onChanged={(value) => {\r\n                    values.refined.red = value;\r\n                    update();\r\n                }}\r\n            />\r\n            <CrystalEditableSlot\r\n                crystal={Crystals.REFINED_CRYSTAL_BLUE}\r\n                onChanged={(value) => {\r\n                    values.refined.blue = value;\r\n                    update();\r\n                }}\r\n            />\r\n            <CrystalEditableSlot\r\n                crystal={Crystals.REFINED_CRYSTAL_YELLOW}\r\n                onChanged={(value) => {\r\n                    values.refined.yellow = value;\r\n                    update();\r\n                }}\r\n            />\r\n        </div>\r\n\r\n        <div class=\"days-group\">\r\n            <h2>{getTranslation(lang, \"app.days\")}</h2>\r\n            <h1>\r\n                {Number.isNaN(values.days) === false ? values.days : \"∞\"}\r\n            </h1>\r\n        </div>\r\n\r\n        <OutlinedCard style=\"margin: 16px; 0\">\r\n            <div class=\"card-stores-container\">\r\n                <div class=\"stores-group\">\r\n                    <!-- Trading Post -->\r\n                    <!-- svelte-ignore a11y-no-static-element-interactions -->\r\n                    <!-- svelte-ignore a11y-click-events-have-key-events -->\r\n                    <div class=\"store-chip\" on:click={toggleChildCheckbox}>\r\n                        {getTranslation(lang, \"trading_post\")}\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"trading_post\"\r\n                            bind:checked={values.trading_post}\r\n                            on:click={stopMouseEvents}\r\n                            on:change={(e) => {\r\n                                values.trading_post = e.currentTarget.checked;\r\n                                update();\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                    <!-- Challenge Shop -->\r\n                    <!-- svelte-ignore a11y-no-static-element-interactions -->\r\n                    <!-- svelte-ignore a11y-click-events-have-key-events -->\r\n                    <div class=\"store-chip\" on:click={toggleChildCheckbox}>\r\n                        {getTranslation(lang, \"challenge_shop\")}\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"challenge_shop\"\r\n                            bind:checked={values.challenge_shop}\r\n                            on:click={stopMouseEvents}\r\n                            on:change={(e) => {\r\n                                values.challenge_shop = e.currentTarget.checked;\r\n                                update();\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                    <!-- Golemore Mine -->\r\n                    <!-- svelte-ignore a11y-no-static-element-interactions -->\r\n                    <!-- svelte-ignore a11y-click-events-have-key-events -->\r\n                    <div class=\"store-chip\" on:click={toggleChildCheckbox}>\r\n                        {getTranslation(lang, \"golemore_mine\")}\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"golemore_mine\"\r\n                            bind:checked={values.golemore_mine}\r\n                            on:click={stopMouseEvents}\r\n                            on:change={(e) => {\r\n                                values.golemore_mine = e.currentTarget.checked;\r\n                                update();\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                    <!-- Guild -->\r\n                    <!-- svelte-ignore a11y-no-static-element-interactions -->\r\n                    <!-- svelte-ignore a11y-click-events-have-key-events -->\r\n                    <div class=\"store-chip\" on:click={toggleChildCheckbox}>\r\n                        {getTranslation(lang, \"guild\")}\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"guild\"\r\n                            bind:checked={values.guild}\r\n                            on:click={stopMouseEvents}\r\n                            on:change={(e) => {\r\n                                values.guild = e.currentTarget.checked;\r\n                                update();\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                    <!-- Banquet -->\r\n                    <!-- svelte-ignore a11y-no-static-element-interactions -->\r\n                    <!-- svelte-ignore a11y-click-events-have-key-events -->\r\n                    <div class=\"store-chip\" on:click={toggleChildCheckbox}>\r\n                        {getTranslation(lang, \"banquet\")}\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"banquet\"\r\n                            bind:checked={values.banquet}\r\n                            on:click={stopMouseEvents}\r\n                            on:change={(e) => {\r\n                                values.banquet = e.currentTarget.checked;\r\n                                update();\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <p>{getTranslation(lang, \"app.information\")}</p>\r\n                <p>{values.expected_ores_per_day}</p>\r\n            </div>\r\n        </OutlinedCard>\r\n    </div>\r\n</CommonLayout>\r\n\r\n<style>\r\n    h1,\r\n    h2 {\r\n        text-align: center;\r\n    }\r\n\r\n    .fragment {\r\n        width: auto;\r\n        height: auto;\r\n        min-height: 100vh;\r\n        max-width: 960px;\r\n        margin: auto;\r\n        margin-bottom: 24px;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n\r\n        user-select: none;\r\n    }\r\n\r\n    .crystal-group {\r\n        display: grid;\r\n        grid-template-columns: auto auto auto;\r\n    }\r\n\r\n    .days-group {\r\n        margin-top: 64px;\r\n        margin-bottom: 28px;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    .days-group h1 {\r\n        margin: 0;\r\n    }\r\n    .days-group h2 {\r\n        margin: 0;\r\n    }\r\n\r\n    /* Stores */\r\n\r\n    .card-stores-container {\r\n        padding: 16px;\r\n    }\r\n    .card-stores-container p {\r\n        margin: 0;\r\n        text-align: center;\r\n    }\r\n\r\n    .stores-group {\r\n        width: auto;\r\n        margin-bottom: 16px;\r\n\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n        justify-content: space-evenly;\r\n    }\r\n\r\n    .store-chip {\r\n        z-index: 1;\r\n        height: 32px;\r\n        padding: 0 16px;\r\n\r\n        border-radius: 8px;\r\n        border: 1px solid var(--md-sys-color-outline-variant);\r\n\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        background: var(--md-sys-color-surface-container-low);\r\n        color: var(--md-sys-color-on-surface);\r\n    }\r\n</style>\r\n", "import Page from '../../svelte/pages/calculator-page.svelte'\r\n\r\nconsole.log('Iniciando...')\r\n\r\nconst app = new Page({ target: document.body })"],
  "mappings": "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",
  "names": ["getRarityColor", "rarity", "RarityColor", "light", "dark", "Item", "name", "rarity", "image", "color", "getRarityColor", "ctx", "attr", "img", "img_src_value", "insert", "target", "div1", "anchor", "append", "div0", "update", "el_slot", "item", "getImage", "xref", "onMount", "$$props", "$$value", "ctx", "insert", "target", "div", "anchor", "append", "input", "crystal", "$$props", "count", "onChanged", "to_number", "value", "num", "REFINED_TO_ORE", "CRYSTAL_TO_ORE", "color_red", "color_blue", "color_yellow", "image_red", "image_blue", "image_yellow", "Crystals", "Item", "getTranslation", "lang", "key", "pt", "en", "getTranslation", "ctx", "insert", "target", "div6", "anchor", "append", "div5", "div0", "input0", "div1", "input1", "div2", "input2", "div3", "input3", "div4", "input4", "p0", "p1", "stopMouseEvents", "toggleChildCheckbox", "set_data", "t0", "t0_value", "t3", "t3_value", "t6", "t6_value", "t9", "t9_value", "t12", "t12_value", "t15", "t15_value", "t17", "t17_value", "Crystals", "h10", "h2", "h11", "t11", "t11_value", "t13", "t13_value", "round", "value", "step", "inverse", "e", "update", "values", "DAILY_LIMIT", "pack_limit", "total_red_ores", "CRYSTAL_TO_ORE", "REFINED_TO_ORE", "total_blue_ores", "total_yellow_ores", "single_max", "days", "onMount", "lang", "app", "calculator_page_default"]
}
